{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}


{#

This code manage the many-to-[one|many] association field popup

#}

{% autoescape false %}

{% set associationadmin = sonata_admin.field_description.associationadmin %}

<!-- edit many association -->

<script type="text/javascript">

    {#
      handle link click in a list :
        - if the parent has an objectId defined then the related input get updated
        - if the parent has NO object then an ajax request is made to refresh the popup
    #}

    $(document).on('update_select_btn{{ id }}', 'table tbody tr td', function(event) {
        var newSelected = $('#{{ id }}').val() || [],
                $this = $(this);

        if (newSelected.indexOf($this.attr('objectid')) == -1) {
            $this.find('a').attr('class', 'btn btn-default');
            $this.find('a').contents()[2].textContent = 'Выбрать';
        } else {
            $this.find('a').attr('class', 'btn btn-danger');
            $this.find('a').contents()[2].textContent = 'Удалить';
        }

    });

    var field_dialog_form_list_link_{{ id }} = function(event) {
        initialize_popup_{{ id }}();

        var target = jQuery(this);

        event.preventDefault();
        event.stopPropagation();

        Admin.log('[{{ id }}|field_dialog_form_list_link] handle link click in a list');

        var element = jQuery(this).parents('#field_dialog_{{ id }} .sonata-ba-list-field'),
                $select = jQuery('#{{ id }}'),
                newSelected, foundedIndex;

        // the user does not click on a row column
        if (element.length == 0) {
            Admin.log('[{{ id }}|field_dialog_form_list_link] the user does not click on a row column, make ajax call to retrieve inner html');
            // make a recursive call (ie: reset the filter)
            jQuery.ajax({
                type: 'GET',
                url: jQuery(this).attr('href'),
                dataType: 'html',
                success: function(html) {
                    Admin.log('[{{ id }}|field_dialog_form_list_link] callback success, attach valid js event');

                    field_dialog_content_{{ id }}.html(html);
                    field_dialog_form_list_handle_action_{{ id }}();
                    field_dialog_form_list_setup_{{ id }}();

                    Admin.shared_setup(field_dialog_{{ id }});
                }
            });

            return;
        }

        Admin.log('[{{ id }}|field_dialog_form_list_link] the user select one element, update input and hide the modal');

        newSelected = $select.val() || [];
        if (foundedIndex = newSelected.indexOf(element.attr('objectId')) == -1) {
            newSelected.push(element.attr('objectId'));
        } else {
            newSelected.splice(foundedIndex, 1);
        }
        $select.val(newSelected);

        element.trigger('update_select_btn{{ id }}');

        $select.trigger('change', element.attr('objectId'));
    };

    // this function handle action on the modal list when inside a selected list
    var field_dialog_form_list_handle_action_{{ id }}  =  function() {
        Admin.log('[{{ id }}|field_dialog_form_list_handle_action] attaching valid js event');

        // capture the submit event to make an ajax call, ie : POST data to the
        // related create admin
        jQuery('a', field_dialog_{{ id }}).on('click', field_dialog_form_list_link_{{ id }});
        jQuery('form', field_dialog_{{ id }}).on('submit', function(event) {
            event.preventDefault();

            var form = jQuery(this);

            Admin.log('[{{ id }}|field_dialog_form_list_handle_action] catching submit event, sending ajax request');

            jQuery(form).ajaxSubmit({
                type: form.attr('method'),
                url: form.attr('action'),
                dataType: 'html',
                data: {_xml_http_request: true},
                success: function(html) {

                    Admin.log('[{{ id }}|field_dialog_form_list_handle_action] form submit success, restoring event');

                    field_dialog_content_{{ id }}.html(html);
                    field_dialog_form_list_handle_action_{{ id }}();
                    field_dialog_form_list_setup_{{ id }}();

                    Admin.shared_setup(field_dialog_{{ id }});
                }
            });
        });
    };

    // this function handle action on the modal list when inside a selected list
    var field_dialog_form_list_setup_{{ id }}  =  function() {
        field_dialog_content_{{ id }}.find('table tr td:last-child').each(function () {
            $(this).trigger('update_select_btn{{ id }}');
        });
    };

    // handle the list link
    var field_dialog_form_list_{{ id }} = function(event) {

        initialize_popup_{{ id }}();

        event.preventDefault();
        event.stopPropagation();

        Admin.log('[{{ id }}|field_dialog_form_list] open the list modal');

        var a = jQuery(this);

        field_dialog_content_{{ id }}.html('');

        // retrieve the form element from the related admin generator
        jQuery.ajax({
            url: a.attr('href'),
            dataType: 'html',
            success: function(html) {

                Admin.log('[{{ id }}|field_dialog_form_list] retrieving the list content');

                // populate the popup container
                field_dialog_content_{{ id }}.html(html);

                field_dialog_title_{{ id }}.html("{{ associationadmin.label|trans({}, associationadmin.translationdomain) }}");

                Admin.shared_setup(field_dialog_{{ id }});

                field_dialog_form_list_handle_action_{{ id }}();
                field_dialog_form_list_setup_{{ id }}();

                // open the dialog in modal mode
                field_dialog_{{ id }}.modal();

                Admin.setup_list_modal(field_dialog_{{ id }});
            }
        });
    };

    var field_dialog_{{ id }}         = false;
    var field_dialog_content_{{ id }} = false;
    var field_dialog_title_{{ id }}   = false;

    function initialize_popup_{{ id }}() {
        // initialize component
        if (!field_dialog_{{ id }}) {
            field_dialog_{{ id }}         = jQuery("#field_dialog_{{ id }}");
            field_dialog_content_{{ id }} = jQuery(".modal-body", "#field_dialog_{{ id }}");
            field_dialog_title_{{ id }}   = jQuery(".modal-title", "#field_dialog_{{ id }}");

            // move the dialog as a child of the root element, nested form breaks html ...
            jQuery(document.body).append(field_dialog_{{ id }});

            Admin.log('[{{ id }}|field_dialog] move dialog container as a document child');
        }
    }

    {% if sonata_admin.edit == 'list' %}
        {#
            This code is used to defined the "list" popup
        #}
        // this function initialize the popup
        // this can be only done this way has popup can be cascaded
        function start_field_dialog_form_list_{{ id }}(link) {

            link.onclick = null;

            initialize_popup_{{ id }}();

            // add the jQuery event to the a element
            jQuery(link)
                .click(field_dialog_form_list_{{ id }})
                .trigger('click')
            ;

            return false;
        }

        $(document).on('click', '.remove_selected_element_{{ id }}',  function(e) {
            e.preventDefault();

            var newSelected = $('#{{ id }}').val() || [],
                    item = $(this).parents('.field-actions'),
                    index = item.data('objectid');

            newSelected = newSelected.slice(index, 1);

            item.remove();

            jQuery('#{{ id }}').val(newSelected).trigger('change');
        });

        {#
          attach onchange event on the input
          attach onchange event on the input
        #}

        // update the label
        jQuery('#{{ id }}').on('change', function(event, objectId) {
            var selected = $(this).val() || [];
            Admin.log('[{{ id }}|on:change] update the label');
            if (selected.indexOf(objectId) == -1) {
                jQuery('#field_widget_{{ id }} [data-objectId=' + objectId + ']').remove();
            } else {
                jQuery('#field_widget_{{ id }}').append("<span class=\"js_loading\"><img src=\"{{ asset('bundles/sonataadmin/ajax-loader.gif') }}\" style=\"vertical-align: middle; margin-right: 10px\"/>{{ 'loading_information'|trans([], 'SonataAdminBundle') }}</span>");
                jQuery.ajax({
                    type: 'GET',
                    url: '{{ url('sonata_admin_short_object_information', {
                        'objectId': 'OBJECT_ID',
                        'uniqid': associationadmin.uniqid,
                        'code': associationadmin.code,
                        'linkParameters': sonata_admin.field_description.options.link_parameters
                    }) }}'.replace('OBJECT_ID', objectId),
                    dataType: 'html',
                    success: function (html) {
                        var el = $('#manyItemSkeleton').clone();
                        el.data('objectid', objectId);
                        el.find('.js_description').html(html);
                        el.show();
                        jQuery('#field_widget_{{ id }} .js_loading').remove();
                        jQuery('#field_widget_{{ id }}').append(el);
                    }
                });
            }
        });

    {% endif %}


</script>
<!-- / edit many association -->

{% endautoescape %}
