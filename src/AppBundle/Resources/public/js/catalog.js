function serialize(objs) {	var out = "";	for (var i = 0; i < objs.length; i++) {		var propKey = objs[i].name + "=";		if (out.indexOf(propKey) == -1) {			out += "&" + propKey;		}		var position = out.indexOf(propKey) + propKey.length;		out = out.substring(0, position) + objs[i].value + "," + out.substring(position);	}	return out.substring(1, out.length - 1).replace(/\,\&/g, "&");}/** * Filters control class */var Filters = (function () {	function Filters() {		var self = this;		this.clearUrl = Routing.generate('filter', {'category': currentCategoryAlias});		this.$filters = $('#filters');		this.$filters.on('change', 'input', this.applyFilters.bind(this));	}	/**	 * Apply filters	 */	Filters.prototype.applyFilters = function () {		var serialised_array = this.$filters.serializeArray();		var filters = serialize(serialised_array);		var price_from = $('#min').val();		var price_to = $('#max').val();		setTimeout(function () {			window.location = this.clearUrl + '?' + filters + '&price_from=' + price_from + '&price_to=' + price_to + '&sort=' + $('#sort').val();		}.bind(this), 1500);	};	return Filters;})();/** * List add to cart buttons */var CartButtonsLists = (function(superClass) {	extend(CartButtonsLists, superClass);	function CartButtonsLists() {		var self = this;		CartButtonsLists.__super__.constructor.call(this);		$(document).on('click', '.js_change_model', function () {			self.changeModel($(this));		});		$(document).on('click', '.js_add_in_cart', this.addInCartClick.bind(this));		$(document).on('mouseleave', '.js_item', function (e) {			self.deactivateForms();		});		$('.js_model_form').hide();		$('.js_item').each(function () {			$(this).find('.js_model_form').first().show();		});	}	// Show model dependencies	CartButtonsLists.prototype.changeModel = function ($button) {		var $forms = $button.closest('.js_item').find('.js_model_form');		$forms.hide();		$forms.filter('[data-model-id="' + $button.data('model-id') + '"]').show();	};	CartButtonsLists.prototype.deactivateForms = function () {		$('.js_model_form').removeClass('active');		$('.darkness').removeClass('active');	};	CartButtonsLists.prototype.addInCartClick = function (e) {		var $form = $(e.target).closest('.js_model_form');		if(!$form.hasClass('active')) {			$form.addClass('active');			$('.darkness').addClass('active');			return false;		}	};	return CartButtonsLists;})(CartButtons);$(window).ready(function () {	new CartButtonsLists();	new Filters();});