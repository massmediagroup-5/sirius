/** * List add to cart buttons */var CartButtonsLists = (function(superClass) {	extend(CartButtonsLists, superClass);	function CartButtonsLists() {		var self = this;		CartButtonsLists.__super__.constructor.call(this);		$(document).on('click', '.js_change_model', function () {			self.changeModel($(this));		});		$(document).on('click', '.js_add_in_cart', this.addInCartClick.bind(this));		$('.js_model_form').hide();		$('.js_item').each(function () {			$(this).find('.js_model_form').first().show();		});	}	// Show model dependencies	CartButtonsLists.prototype.changeModel = function ($button) {		var $forms = $button.closest('.js_item').find('.js_model_form');		$forms.hide();		$forms.filter('[data-model-id="' + $button.data('model-id') + '"]').show();	};	// Show model dependencies	CartButtonsLists.prototype.successSubmit = function ($item, data) {		CartButtonsLists.__super__.successSubmit.call(this, $item, data);		$('.darkness').removeClass('active');		$item.removeClass('active').find('.sizes').removeClass('active');		$item.data('addBtnClickNumber', 0);	};	CartButtonsLists.prototype.addInCartClick = function (e) {		var $this = $(e.target),			$item = $this.closest('.js_item'),			clickNumber = $item.data('addBtnClickNumber');		if(clickNumber > 0) {			clickNumber++;		} else {			clickNumber = 1;		}		$item.data('addBtnClickNumber', clickNumber);		e.preventDefault();		// Make element form active on first click		if(clickNumber == 1) {			$item.addClass('active').find('.sizes').addClass('active');			$('.darkness').addClass('active');		} else {			this.getForm($item).submit();		}	};	return CartButtonsLists;})(CartButtons);$(window).ready(function () {	new CartButtonsLists();});