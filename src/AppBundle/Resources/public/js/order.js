var updatePrices = function(data) {    $('.js_cart_pre_order_total_price').text(data.preOrderItemsPrice);    $('.js_cart_standard_total_price').text(data.standardItemsPrice);    $('.js_cart_total_count').text(data.totalCount);    $('.js_cart_total_price').text(data.totalPrice);    $('.js_cart_total_discounted_price').text(data.discountedTotalPrice);    var modelId = this.$form.data('id');    $('.js_item_price[data-id="' + modelId + '"]').text(data.currentPrice);};/** * Form to change cart item count */var OrderItemCountAutoForm = (function (superClass) {    extend(OrderItemCountAutoForm, superClass);    function OrderItemCountAutoForm($form) {        OrderItemCountAutoForm.__super__.constructor.call(this, $form);    }    OrderItemCountAutoForm.prototype.successSubmit = function (data) {        this.updatePrices(data);    };    OrderItemCountAutoForm.prototype.updatePrices = updatePrices;    return OrderItemCountAutoForm;})(AjaxAutoForm);/** * Form to change cart item size */var OrderItemSizeAutoForm = (function (superClass) {    extend(OrderItemSizeAutoForm, superClass);    function OrderItemSizeAutoForm($form) {        OrderItemSizeAutoForm.__super__.constructor.call(this, $form);        this.setFormId();    }    OrderItemSizeAutoForm.prototype.successSubmit = function (data) {        var currentItemSizeId = this.$form.find('select.js_item_size_id').val();        this.$form.closest('.js_cart_item').find('.js_item_price').attr('data-id', currentItemSizeId);        this.$form.closest('.js_cart_item').find('.js_item_size_id').val(currentItemSizeId);        this.$form.closest('.js_cart_item').find('.js_item_old_size_id').val(currentItemSizeId);        this.setFormId();        this.updatePrices(data);    };    OrderItemSizeAutoForm.prototype.setFormId = function (id) {        var currentItemSizeId = this.$form.find('select.js_item_size_id').val();        this.$form.data('id', currentItemSizeId);        this.$form.attr('action', Routing.generate('cart_change_size', {id: currentItemSizeId}));    };    OrderItemSizeAutoForm.prototype.updatePrices = updatePrices;    return OrderItemSizeAutoForm;})(AjaxAutoForm);/** * Form to change cart item size */var OrderItemRemoveAutoForm = (function (superClass) {    extend(OrderItemRemoveAutoForm, superClass);    function OrderItemRemoveAutoForm($form) {        OrderItemRemoveAutoForm.__super__.constructor.call(this, $form);    }    OrderItemRemoveAutoForm.prototype.successSubmit = function (data) {        if(data.totalCount == 0) {            window.location.reload();            return;        }        this.updatePrices(data);        this.$form.closest('.js_cart_item').remove();    };    OrderItemRemoveAutoForm.prototype.updatePrices = updatePrices;    return OrderItemRemoveAutoForm;})(AjaxAutoForm);$(window).ready(function () {    $('.js_auto_ajax_form[name="change_product_size_quantity"]').each(function () {        new OrderItemCountAutoForm($(this));    });    $('.js_auto_ajax_form[name="change_product_size"]').each(function () {        new OrderItemSizeAutoForm($(this));    });    $('.js_auto_ajax_remove_form').each(function () {        new OrderItemRemoveAutoForm($(this));    });});